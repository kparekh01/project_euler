
# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

require 'benchmark'
require 'bigdecimal/math'

puts Benchmark.measure {
  fib_arr = [1, 2]
  even_fib_array = [2]
  while fib_arr[-1] < 4000000
    next_fib = fib_arr[-1]+fib_arr[-2]
    if next_fib.even?
      fib_arr << next_fib
      even_fib_array << next_fib
    else
      fib_arr << next_fib
    end
  end
  p even_fib_array.inject(:+) #4613732
}
# execution times may vary from computer to computer, but on my mac it took (  0.000047) seconds to execute.
# my each and map solutions were both longer when benchmarked against my while loop which were both in the
# triple digits.
